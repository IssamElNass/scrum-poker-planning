name: Deploy to Hetzner VPS

on:
  push:
    tags:
      - "v*.*.*"

concurrency: { group: deploy-scrum-poker-planning, cancel-in-progress: true }

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Upload project files to VPS
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          port: ${{ secrets.VPS_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "."
          target: "/home/${{ secrets.VPS_USER }}/apps/scrum-poker-planning"
          overwrite: true
          strip_components: 0
          exclude: ".git,node_modules,.next,.DS_Store"

      - name: Deploy Convex and start app
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          port: ${{ secrets.VPS_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            set -e
            cd /home/${{ secrets.VPS_USER }}/apps/scrum-poker-planning

            # Create environment files
            echo "NEXT_PUBLIC_CONVEX_URL=${{ secrets.CONVEX_URL }}" > .env
            echo "NEXT_PUBLIC_CONVEX_URL=${{ secrets.CONVEX_URL }}" > .env.local
            echo "NEXT_PUBLIC_CONVEX_URL=${{ secrets.CONVEX_URL }}" > .env.production
            chmod 600 .env .env.local .env.production

            # Install dependencies for Convex deployment only
            sudo apt update
            sudo apt install -y nodejs npm
            npm install --no-audit convex

            # Deploy Convex functions only (no build)
            export CONVEX_DEPLOY_KEY="${{ secrets.CONVEX_DEPLOY_KEY }}"
            npx convex deploy --cmd "npm run build"

            # Let Docker handle the single build and start
            export NEXT_PUBLIC_CONVEX_URL="${{ secrets.CONVEX_URL }}"
            docker compose down || true
            docker compose build --pull
            docker compose up -d
            docker image prune -f || true
